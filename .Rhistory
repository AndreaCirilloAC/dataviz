library(paletter)
palette_maker("image.jpg")
download.file("https://andreacirilloac.github.io/dataviz/images/sacra_famiglia_canigiani.jpg", "image.jpg")
palette_maker("image.jpg")
colours_vector <- palette_maker("image.jpg")
ggplot(data = mtcars,aes(x=disp,y = hp, color= rownames(mtcars)))+
geom_point(stat = 'identity',aes( size = cyl))+
scale_color_manual(values = colours_vector)
library(ggplot2)
ggplot(data = mtcars,aes(x=disp,y = hp, color= rownames(mtcars)))+
geom_point(stat = 'identity',aes( size = cyl))+
scale_color_manual(values = colours_vector)
colours_vector <- palette_maker("image.jpg", number_of_colors = 32)
ggplot(data = mtcars,aes(x = disp,y = hp, color = rownames(mtcars)))+
geom_point(stat = 'identity',aes( size = cyl)) +
scale_color_manual(values = colours_vector)
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
?knn
?k-means
?kmeans
library(dplyr)
library(jpeg)
library(ggplot2)
library(ggrepel)
#read file
painting     <- readJPEG("images/sacra_famiglia_canigiani.jpg")
dimension    <- dim(painting)
painting_rgb <- data.frame(
x = rep(1:dimension[2], each = dimension[1]),
y = rep(dimension[1]:1, dimension[2]),
R = as.vector(painting[,,1]),
G = as.vector(painting[,,2]),
B = as.vector(painting[,,3])
)
#apply clustering
n_clusters     <- 32
k_means        <- kmeans(painting_rgb[,c("R","G","B")], centers = n_clusters, iter.max = 30)
k_means$cluster
k_means$centers
knitr::opts_chunk$set(echo = TRUE)
library(jpeg)
library(ggplot2)
download.file("https://andreacirilloac.github.io/dataviz/images/sacra_famiglia_canigiani.jpg", "image.jpg")
painting     <- readJPEG("image.jpg")
painting
str(painting)
View(painting)
?radJPEG
?readJPEG
painting[,,3]
Vie(painting[,,3])
View(painting[,,3])
?kmeans
str(k_means)
k_means$cluster
str(k_means)
centers
k_means$centers
colours_vector <- rgb(k_means$centers)
show_col(colours_vector)
library(scales)
show_col(colours_vector)
colours_k      <- rgb(k_means$centers[k_means$cluster,])
colours_vector <- rgb(k_means$centers)
show_col(colours_vector)
show_col(colours_vector)
colours_k      <- rgb(k_means$centers[k_means$cluster,])
show_col(unique(colours_k))
match(colours_vector,unique(colours_k))
match(unique(colours_k),colours_vector)
library(ggplot2)
