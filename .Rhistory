as.vector()
}
data.frame(red_vector,green_vector,blue_vector) -> rgb_triples
rgb(red = rgb_triples[,1],green = rgb_triples[,2], blue = rgb_triples[,3]) %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
select(1) %>%
head(n = n_colours) -> rgb_main
sample( rgb_main[,1], size = n_sample) %>%
as.vector()
}
palette_crafter <- function(path_to_pnm, n_colours, n_sample){
pnm <- read.pnm(path_to_pnm)
red_vector           <- as.vector(pnm@red)
green_vector         <- as.vector(pnm@green)
blue_vector          <- as.vector(pnm@blue)
data.frame(red_vector,green_vector,blue_vector) -> rgb_triples
rgb(red = rgb_triples[,1],green = rgb_triples[,2], blue = rgb_triples[,3]) %>%
table() %>%
as.data.frame() %>%
arrange(desc(Freq)) %>%
select(1) %>%
head(n = n_colours) -> rgb_main
sample( rgb_main[,1], size = n_sample) %>%
as.vector()
}
sample_michelangelo <- palette_crafter("images/sacra_famiglia_canigiani.ppm",n_colours =1000,n_sample =50 )
show_col(as.vector(sample_raffaello[,1]))
show_col(as.vector(sample_michelangelo[,1]))
show_col(as.vector(sample_michelangelo))
sample_michelangelo <- palette_crafter("images/sacra_famiglia_canigiani.ppm",n_colours =1000,n_sample =50 )
show_col(as.vector(sample_michelangelo))
sample_michelangelo <- palette_crafter("images/sacra_famiglia_canigiani.ppm",n_colours =1000,n_sample =50 )
show_col(as.vector(sample_michelangelo))
sample_michelangelo <- palette_crafter("images/sacra_famiglia_canigiani.ppm",n_colours =1000,n_sample =50 )
show_col(as.vector(sample_michelangelo))
sample_michelangelo <- palette_crafter("images/sacra_famiglia_canigiani.ppm",n_colours =1000,n_sample =50 )
show_col(as.vector(sample_michelangelo))
sample_michelangelo <- palette_crafter("images/sacra_famiglia_canigiani.ppm",n_colours =1000,n_sample =100 )
show_col(as.vector(sample_michelangelo))
sample_michelangelo <- palette_crafter("images/sacra_famiglia_canigiani.ppm",n_colours =1000,n_sample =100 )
show_col(as.vector(sample_michelangelo))
sample_michelangelo <- palette_crafter("images/sacra_famiglia_canigiani.ppm",n_colours =1000,n_sample =100 )
show_col(as.vector(sample_michelangelo))
sample_michelangelo <- palette_crafter("images/sacra_famiglia_canigiani.ppm",n_colours =1000,n_sample =100 )
show_col(as.vector(sample_michelangelo))
sample_michelangelo <- palette_crafter("images/sacra_famiglia_canigiani.ppm",n_colours =1000,n_sample =100 )
show_col(as.vector(sample_michelangelo))
sample_michelangelo <- palette_crafter("images/sacra_famiglia_canigiani.ppm",n_colours =1000,n_sample =100 )
show_col(as.vector(sample_michelangelo))
show_col_hack(as.vector(sample_michelangelo), cex_label = 0.5)
show_col_hack(as.vector(sample_michelangelo))
show_col_hack(as.vector(sample_michelangelo))
show_col(as.vector(sample_michelangelo))
sample_michelangelo <- palette_crafter("images/sacra_famiglia_canigiani.ppm",n_colours =1000,n_sample =400 )
show_col(as.vector(sample_michelangelo))
sample_michelangelo <- palette_crafter("images/profeta_daniele.ppm",n_colours =1000,n_sample =400 )
show_col(as.vector(sample_michelangelo))
show_col(as.vector(sample_michelangelo))
sample_michelangelo <- palette_crafter("images/profeta_daniele.ppm",n_colours =1000,n_sample =400 )
show_col(as.vector(sample_michelangelo))
show_col(as.vector(sample_michelangelo), cex_label = 0.7)
show_col(as.vector(sample_michelangelo), cex_label = 0.4)
sample_michelangelo <- palette_crafter("images/sacra_famiglia_canigiani.ppm",n_colours =1000,n_sample =400 )
show_col(as.vector(sample_michelangelo), cex_label = 0.4)
install.packages("imager")
install.packages("jpeg")
lbirary(jpeg)
library(jpeg)
painting <- readJPEG("images/profeta_daniele.ppm")
painting <- readJPEG("images/profeta_daniele.jpg")
painting_rgb <- data.frame(
x = rep(1:painting[2], each = painting[1]),
y = rep(painting[1]:1, painting[2]),
R = as.vector(img[,,1]),
G = as.vector(img[,,2]),
B = as.vector(img[,,3])
)
painting <- readJPEG("images/profeta_daniele.jpg")
dimension <- dim(painting)
dimension <- dim(painting)
painting_rgb <- data.frame(
x = rep(1:dimension[2], each = dimension[1]),
y = rep(dimension[1]:1, dimension[2]),
R = as.vector(painting[,,1]),
G = as.vector(painting[,,2]),
B = as.vector(painting[,,3])
)
n_clusters <- 20
k_means    <- kmeans(painting_rgb[,c("R","G","B")], centers = n_clusters)
plot(k_means)
str(k_means)
?kmeans
colours_vector <- rgb(k_means$centers[k_means$cluster,])
show_col(colours_vector)
Q
Q
Q
Q
Q
Q
Q
c
Q
Q
Q
Q
Q
Q
Q
Q
Q
Q
n_clusters <- 3
k_means    <- kmeans(painting_rgb[,c("R","G","B")], centers = n_clusters)
colours_vector <- rgb(k_means$centers[k_means$cluster,])
colours_vector <- unique(rgb(k_means$centers[k_means$cluster,]))
n_clusters <- 20
k_means    <- kmeans(painting_rgb[,c("R","G","B")], centers = n_clusters)
colours_vector <- unique(rgb(k_means$centers[k_means$cluster,]))
show_col(colours_vector)
n_clusters <- 30
k_means    <- kmeans(painting_rgb[,c("R","G","B")], centers = n_clusters)
colours_vector <- unique(rgb(k_means$centers[k_means$cluster,]))
show_col(colours_vector)
n_clusters <- 40
k_means    <- kmeans(painting_rgb[,c("R","G","B")], centers = n_clusters)
colours_vector <- unique(rgb(k_means$centers[k_means$cluster,]))
show_col(colours_vector)
painting <- readJPEG("images/aminadab.jpg")
dimension <- dim(painting)
painting_rgb <- data.frame(
x = rep(1:dimension[2], each = dimension[1]),
y = rep(dimension[1]:1, dimension[2]),
R = as.vector(painting[,,1]),
G = as.vector(painting[,,2]),
B = as.vector(painting[,,3])
)
#apply clustering
n_clusters <- 40
k_means    <- kmeans(painting_rgb[,c("R","G","B")], centers = n_clusters)
colours_vector <- unique(rgb(k_means$centers[k_means$cluster,]))
show_col(colours_vector)
n_clusters <- 36
k_means    <- kmeans(painting_rgb[,c("R","G","B")], centers = n_clusters)
colours_vector <- unique(rgb(k_means$centers[k_means$cluster,]))
show_col(colours_vector)
k_means    <- kmeans(painting_rgb[,c("R","G","B")], centers = n_clusters, iter.max = 30)
colours_vector <- unique(rgb(k_means$centers[k_means$cluster,]))
show_col(colours_vector)
n_clusters <- 80
k_means    <- kmeans(painting_rgb[,c("R","G","B")], centers = n_clusters, iter.max = 30)
colours_vector <- unique(rgb(k_means$centers[k_means$cluster,]))
show_col(colours_vector)
colours_k  <- rgb(k_means$centers[k_means$cluster,])
colours_vector <- unique(colours_k)
ggplot(data = painting_rgb, aes(x = x, y = y)) +
geom_point(colour = colours_k)
library(ggplot2)
ggplot(data = painting_rgb, aes(x = x, y = y)) +
geom_point(colour = colours_k)
n_clusters <- 30
k_means    <- kmeans(painting_rgb[,c("R","G","B")], centers = n_clusters, iter.max = 30)
colours_k  <- rgb(k_means$centers[k_means$cluster,])
colours_vector <- unique(colours_k)
ggplot(data = painting_rgb, aes(x = x, y = y)) +
geom_point(colour = colours_k)
n_clusters <- 20
k_means    <- kmeans(painting_rgb[,c("R","G","B")], centers = n_clusters, iter.max = 30)
colours_k  <- rgb(k_means$centers[k_means$cluster,])
colours_vector <- unique(colours_k)
show_col(colours_vector)
ggplot(data = painting_rgb, aes(x = x, y = y)) +
geom_point(colour = colours_k)
painting <- readJPEG("images/sacra_famiglia_canigiani.jpg")
dimension <- dim(painting)
painting_rgb <- data.frame(
x = rep(1:dimension[2], each = dimension[1]),
y = rep(dimension[1]:1, dimension[2]),
R = as.vector(painting[,,1]),
G = as.vector(painting[,,2]),
B = as.vector(painting[,,3])
)
#apply clustering
n_clusters <- 20
k_means    <- kmeans(painting_rgb[,c("R","G","B")], centers = n_clusters, iter.max = 30)
colours_k  <- rgb(k_means$centers[k_means$cluster,])
colours_vector <- unique(colours_k)
show_col(colours_vector)
ggplot(data = painting_rgb, aes(x = x, y = y)) +
geom_point(colour = colours_k)
painting <- readJPEG("images/vergine_delle_rocce.jpg")
dimension <- dim(painting)
painting_rgb <- data.frame(
x = rep(1:dimension[2], each = dimension[1]),
y = rep(dimension[1]:1, dimension[2]),
R = as.vector(painting[,,1]),
G = as.vector(painting[,,2]),
B = as.vector(painting[,,3])
)
#apply clustering
n_clusters <- 20
k_means    <- kmeans(painting_rgb[,c("R","G","B")], centers = n_clusters, iter.max = 30)
colours_k  <- rgb(k_means$centers[k_means$cluster,])
colours_vector <- unique(colours_k)
show_col(colours_vector)
painting <- readJPEG("images/sacra_famiglia_canigiani.jpg")
dimension <- dim(painting)
painting_rgb <- data.frame(
x = rep(1:dimension[2], each = dimension[1]),
y = rep(dimension[1]:1, dimension[2]),
R = as.vector(painting[,,1]),
G = as.vector(painting[,,2]),
B = as.vector(painting[,,3])
)
#apply clustering
n_clusters <- 15
k_means    <- kmeans(painting_rgb[,c("R","G","B")], centers = n_clusters, iter.max = 30)
colours_k  <- rgb(k_means$centers[k_means$cluster,])
colours_vector <- unique(colours_k)
show_col(colours_vector)
ggplot(data = painting_rgb, aes(x = x, y = y)) +
geom_point(colour = colours_k)
painting <- readJPEG("images/sacra_famiglia_canigiani.jpg")
dimension <- dim(painting)
painting_rgb <- data.frame(
x = rep(1:dimension[2], each = dimension[1]),
y = rep(dimension[1]:1, dimension[2]),
R = as.vector(painting[,,1]),
G = as.vector(painting[,,2]),
B = as.vector(painting[,,3])
)
#apply clustering
n_clusters <- 15
k_means    <- kmeans(painting_rgb[,c("R","G","B")], centers = n_clusters, iter.max = 30)
colours_k  <- rgb(k_means$centers[k_means$cluster,])
colours_vector <- unique(colours_k)
show_col(colours_vector)
ggplot(data = painting_rgb, aes(x = x, y = y)) +
geom_point(colour = colours_k)
n_clusters <- 20
k_means    <- kmeans(painting_rgb[,c("R","G","B")], centers = n_clusters, iter.max = 30)
colours_k  <- rgb(k_means$centers[k_means$cluster,])
colours_vector <- unique(colours_k)
show_col(colours_vector)
ggplot(data = painting_rgb, aes(x = x, y = y)) +
geom_point(colour = colours_k)
painting <- readJPEG("images/profeta_daniele.jpg")
dimension <- dim(painting)
painting_rgb <- data.frame(
x = rep(1:dimension[2], each = dimension[1]),
y = rep(dimension[1]:1, dimension[2]),
R = as.vector(painting[,,1]),
G = as.vector(painting[,,2]),
B = as.vector(painting[,,3])
)
#apply clustering
n_clusters <- 20
k_means    <- kmeans(painting_rgb[,c("R","G","B")], centers = n_clusters, iter.max = 30)
colours_k  <- rgb(k_means$centers[k_means$cluster,])
colours_vector <- unique(colours_k)
show_col(colours_vector)
ggplot(data = painting_rgb, aes(x = x, y = y)) +
geom_point(colour = colours_k)
library(rmarkdown)
rmarkdown::render()
render_site()
render_site()
render_site()
colnames(iris)
ggplot(data = iris,aes(x=Species,y = Petal.Width))+
geom_bar(stat = 'identity')
ggplot(data = iris,aes(x=Species,y = Petal.Width))+
geom_bar(stat = 'identity')+
scale_fill_manual(values = colours_vector)
ggplot(data = iris,aes(x=Species,y = Petal.Width, fill = Species))+
geom_bar(stat = 'identity')+
scale_fill_manual(values = colours_vector)
ggplot(data = iris,aes(x=Sepal.Length,y = Petal.Width, fill = Species))+
geom_bar(stat = 'identity')+
scale_fill_manual(values = colours_vector)
ggplot(data = iris,aes(x=Sepal.Length,y = Petal.Width, fill = Sepal.Length))+
geom_bar(stat = 'identity')+
scale_fill_manual(values = colours_vector)
Hmisc::describe(discoveries)
Hmisc::describe(data(discoveries))
data(discoveries)
describe(discoveries)
Hmisc::describe(discoveries)
head(discoveries)
data("HairEyeColor")
Hmisc::describe(HairEyeColor)
head(HairEyeColor)
cars
iris3
head(Titanic)
head(trees)
head(WorldPhones)
cil
volcano
ToothGrowth
head(swiss)
Hmisc::describe(swiss)
View(swiss)
head(sleep)
head(state)
data(state)
head(state)
state
data(state)
data <- data(state)
data
state.region
sunspots
mtcars
mtcars[,1]
rownames(mtcars)
head(mtcars)
ggplot(data = mtcars,aes(x=cyl,y = hp, fill = rownames(mtcars)))+
geom_bar(stat = 'identity')+
scale_fill_manual(values = colours_vector)
n_clusters     <- 32
k_means        <- kmeans(painting_rgb[,c("R","G","B")], centers = n_clusters, iter.max = 30)
colours_k      <- rgb(k_means$centers[k_means$cluster,])
colours_vector <- unique(colours_k)
show_col(colours_vector)
ggplot(data = mtcars,aes(x=cyl,y = hp, fill = rownames(mtcars)))+
geom_bar(stat = 'identity')+
scale_fill_manual(values = colours_vector)
ggplot(data = mtcars,aes(x=cyl,y = hp, fill = rownames(mtcars)))+
geom_point(stat = 'identity')+
scale_fill_manual(values = colours_vector)
ggplot(data = mtcars,aes(x=cyl,y = hp, colour = rownames(mtcars)))+
geom_point(stat = 'identity')+
scale_fill_manual(values = colours_vector)
head(mtcars)
sd(mtcars)
sd(mtcars$mpg)
sd(mtcars$cyk)
sd(mtcars$cyl)
sd(mtcars$disp)
sd(mtcars$hp)
sd(mtcars$drat)
sd(mtcars$wtù)
sd(mtcars$wt)
range(disp)
range(mtcars$disp)
unique(mtcars$disp)
ggplot(data = mtcars,aes(x=disp,y = hp, colour = rownames(mtcars)))+
geom_point(stat = 'identity')+
scale_fill_manual(values = colours_vector)
ggplot(data = mtcars,aes(x=disp,y = hp, group = rownames(mtcars)))+
geom_point(stat = 'identity')+
scale_fill_manual(values = colours_vector)
ggplot(data = mtcars,aes(x=disp,y = hp, color= rownames(mtcars),group = rownames(mtcars)))+
geom_point(stat = 'identity')+
scale_fill_manual(values = colours_vector)
ggplot(data = mtcars,aes(x=disp,y = hp, color= rownames(mtcars),group = rownames(mtcars)))+
geom_point(stat = 'identity')+
scale_color_manual(values = colours_vector)
ggplot(data = mtcars,aes(x=disp,y = hp, color= rownames(mtcars),group = rownames(mtcars)))+
geom_point(stat = 'identity')+
scale_color_manual(values = colours_vector)+
theme_minimal()
ggplot(data = mtcars,aes(x=disp,y = hp, color= rownames(mtcars),group = rownames(mtcars)))+
geom_point(stat = 'identity', size = cyl)+
scale_color_manual(values = colours_vector)+
theme_minimal()
ggplot(data = mtcars,aes(x=disp,y = hp, color= rownames(mtcars),group = rownames(mtcars)))+
geom_point(stat = 'identity',aes( size = cyl))+
scale_color_manual(values = colours_vector)+
theme_minimal()
library(dplyr)
library(jpeg)
library(ggplot2)
#read file
painting     <- readJPEG("images/sacra_famiglia_canigiani.jpg")
dimension    <- dim(painting)
painting_rgb <- data.frame(
x = rep(1:dimension[2], each = dimension[1]),
y = rep(dimension[1]:1, dimension[2]),
R = as.vector(painting[,,1]),
G = as.vector(painting[,,2]),
B = as.vector(painting[,,3])
)
#apply clustering
n_clusters     <- 32
k_means        <- kmeans(painting_rgb[,c("R","G","B")], centers = n_clusters, iter.max = 30)
colours_k      <- rgb(k_means$centers[k_means$cluster,])
colours_vector <- unique(colours_k)
show_col(colours_vector)
ggplot(data = mtcars,aes(x=disp,y = hp, color= rownames(mtcars),group = rownames(mtcars)))+
geom_point(stat = 'identity',aes( size = cyl))+
scale_color_manual(values = colours_vector)+
theme_minimal()
ggplot(data = mtcars,aes(x=disp,y = hp, color= rownames(mtcars),label = rownames(mtcars)))+
geom_point(stat = 'identity',aes( size = cyl))+
scale_color_manual(values = colours_vector)+
theme_minimal()+
geom_text()
ggplot(data = mtcars,aes(x=disp,y = hp, color= rownames(mtcars)))+
geom_point(stat = 'identity',aes( size = cyl))+
scale_color_manual(values = colours_vector)+
theme_minimal()+
geom_text(label = rownames(mtcars))
ggplot(data = mtcars,aes(x=disp,y = hp, color= rownames(mtcars)))+
geom_point(stat = 'identity',aes( size = cyl))+
scale_color_manual(values = colours_vector)+
theme_minimal()+
geom_text(label = rownames(mtcars), inherit.aes = FALSE)
ggplot(data = mtcars,aes(x=disp,y = hp, color= rownames(mtcars)))+
geom_point(stat = 'identity',aes( size = cyl))+
scale_color_manual(values = colours_vector)+
theme_minimal()+
geom_text(label = rownames(mtcars), color = 'black')
library(ggrepel)
ggplot(data = mtcars,aes(x=disp,y = hp, color= rownames(mtcars)))+
geom_point(stat = 'identity',aes( size = cyl))+
scale_color_manual(values = colours_vector)+
theme_minimal()+
ggrepel_geom_text(label = rownames(mtcars), color = 'black')
ggplot(data = mtcars,aes(x=disp,y = hp, color= rownames(mtcars)))+
geom_point(stat = 'identity',aes( size = cyl))+
scale_color_manual(values = colours_vector)+
theme_minimal()+
geom_text_repel(label = rownames(mtcars), color = 'black')
ggplot(data = mtcars,aes(x=disp,y = hp, color= rownames(mtcars)))+
geom_point(stat = 'identity',aes( size = cyl))+
scale_color_manual(values = colours_vector)+
theme_minimal()+
geom_text(label = rownames(mtcars), color = 'black', check_overlap = TRUE)
ggplot(data = mtcars,aes(x=disp,y = hp, color= rownames(mtcars)))+
geom_point(stat = 'identity',aes( size = cyl))+
scale_color_manual(values = colours_vector)+
theme_minimal()+
geom_text(label = rownames(mtcars), color = 'grey70', check_overlap = TRUE)
mtcars,aes(x=disp,y = hp, color= rownames(mtcars)))+
geom_point(stat = 'identity',aes( size = cyl))+
scale_color_manual(values = colours_vector)+
theme_minimal()+
geom_text(label = rownames(mtcars), color = 'grey40', check_overlap = TRUE)
ggplot(data = mtcars,aes(x=disp,y = hp, color= rownames(mtcars)))+
geom_point(stat = 'identity',aes( size = cyl))+
scale_color_manual(values = colours_vector)+
theme_minimal()+
geom_text(label = rownames(mtcars), color = 'grey40', check_overlap = TRUE)
palette_maker <- function(image_path = NA, number_of_colors = 20){
if (is.na(image_path)){stop("you must provide a jpg image to build your palette from")}
painting     <- readJPEG(image_path)
dimension    <- dim(painting)
painting_rgb <- data.frame(
x = rep(1:dimension[2], each = dimension[1]),
y = rep(dimension[1]:1, dimension[2]),
R = as.vector(painting[,,1]),
G = as.vector(painting[,,2]),
B = as.vector(painting[,,3])
)
k_means        <- kmeans(painting_rgb[,c("R","G","B")], centers = number_of_colors, iter.max = 30)
colours_k      <- rgb(k_means$centers[k_means$cluster,])
colours_vector <- unique(colours_k)
show_col(colours_vector)
return(colours_vector)
}
palette_maker(image_path = "images/aminadab.jpg")
as.vector(installed.packages())
?installed.packages
installed.packages() %>% select(Package) %>% as.vector()
installed.packages() %>% as.data.frame() %>% select(Package) %>% as.vector()
installed.packages() %>% as.data.frame() %>% select(Package) %>% as.vector() -> needed.packages
needed.packages
installed.packages() %>% as.data.frame() %>% select(Package) %>% as.vector() %>% t()-> needed.packages
needed.packages
installed.packages() %>% as.data.frame() %>% select(Package) %>% as.character() -> needed.packages
needed.packages
installed.packages() %>% as.data.frame() %>% select(Package) %>% as.vector() %>% as.character() -> needed_packages
needed.packages
installed.packages() %>% as.data.frame() %>% select(Package) %>% as.vector() -> needed_packages
installed.packages() %>% as.data.frame() %>% select(Package) %>% as.vector() -> needed_packages
paste0("'",needed_packages, "'")
installed.packages() %>% as.data.frame() %>% select(Package) %>% as.vector() -> needed_packages
paste0("'",needed_packages, "'")
installed.packages() %>% as.data.frame() %>% select(Package) %>% as.vector() -> needed_packages
needed.packages
installed.packages() %>% as.data.frame() %>% select(Package) %>% as.vector() -> needed_packages
paste0("'",needed_packages, "'")
installed.packages() %>% as.data.frame() %>% select(Package)
installed.packages() %>% as.data.frame() %>% select(Package) %>% as.data.frame()
installed.packages() %>% as.data.frame() %>% select(Package) %>% as.data.frame()
installed.packages() %>% as.data.frame() %>% select(Package) %>% as.data.frame()
installed.packages() %>% as.data.frame() %>% select(Package) %>% as.data.frame()
installed.packages() %>% as.data.frame() %>% select(Package) %>% as.data.frame() %>% as.vector() -> needed_packages
needed.packages
installed.packages() %>% as.data.frame() %>% select(Package) %>% as.vector() -> needed_packages
needed_packages
installed.packages() %>% as.data.frame() %>% select(Package) %>% as.vector() %>% as.character()-> needed_packages
needed_packages
installed.packages() %>% as.data.frame() %>% select(Package) %>% as.vector() %>%-> needed_packages
installed.packages() %>% as.data.frame() %>% select(Package) %>% as.vector() -> needed_packages
paste0("'",needed_packages, "'")
paste0("'",needed_packages, "'")
paste0("'",needed_packages, "'")
installed.packages() %>% as.data.frame() %>% select(Package) %>% as.vector() -> needed_packages
needed_packages
paste("'",needed_packages, "'")
paste("'",unlist(needed_packages), "'")
installed.packages() %>% as.data.frame() %>% select(Package) %>% as.vector() %>%unlist()-> needed_packages
needed_packages
paste(unlist(needed_packages))
install.packages(needed_packages)
?install.packages
install.packages(needed_packages, verbose= FALSE)
